server.port=8084

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://rm-bp1v30gvxn3h81ytx.mysql.rds.aliyuncs.com:3306/visitor?usSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=xiaosong
spring.datasource.password=Xsafe!@1v$Lq

#spring.datasource.url=jdbc:mysql://localhost:3306/vistor?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
#spring.datasource.username=root
#spring.datasource.password=root

spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=1800
spring.datasource.logAbandoned=true

spring.datasource.initialSize=5
spring.datasource.minIdle=20
spring.datasource.maxActive=50
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis= 300000
spring.datasource.validationQuery= SELECT 1 FROM DUAL
spring.datasource.testWhileIdle= true
spring.datasource.testOnBorrow= false
spring.datasource.testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true
#debug=true


#logging.level.com.manage=warn
logging.config=classpath:config/logback-spring.xml
#logging.level.org.springframework=WARN
#logging.level.org.spring.springboot.dao=DEBUG
#logging.file=D:/log/spring-boot-logging.log
#logging.file=/2017_8_5_3/manage-agent/logs/agent-spring-boot-logging.log

#spring.aop.auto=true

#mybatis start
mybatis.config-locations=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:/com/manage/mapping/*.xml
mybatis.type-aliases-package=com.manage.model
mybatis.configuration.mapUnderscoreToCamelCase=false
mybatis.configuration.map-underscore-to-camel-case=false
#mybatis end

#mapper
#mappers 多个接口时逗号隔开#tk.mybatis.springboot.util.MyMapper
mapper.mappers=com.manage.utils.mapper.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#kaptcha.properties
kaptcha.border=no
kaptcha.border.color=105,179,90
#kaptcha.textproducer.font.color=white
kaptcha.textproducer.font.color=black
kaptcha.image.width=125
kaptcha.image.height=45
kaptcha.session.key=code
kaptcha.textproducer.char.length=4
kaptcha.textproducer.font.names=宋体,楷体,微软雅黑
kaptcha.noise.impl=com.google.code.kaptcha.impl.NoNoise
kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.FishEyeGimpy
kaptcha.noise.color=255,255,255
kaptcha.background.impl=com.google.code.kaptcha.impl.DefaultBackground
#kaptcha.background.clear.from=black
#kaptcha.background.clear.to=black
kaptcha.background.clear.from=white
kaptcha.background.clear.to=white
#网页版认证+审核地址
#sendParams=http://rnecyw.natappfree.cc
##二维码存储地址    linux=qrcodeimgs=/usr/java/img/qrcodeimgs/  windows:E://qrcodeimgs/
#qrcodeimgs=E://qrcodeimgs/
##映射的Nginx虚拟路径
#imgPath=http://127.0.0.1/res/
sendParams=http://t.pyblkj.cn:8081/
#二维码存储地址    linux=qrcodeimgs=/usr/java/img/qrcodeimgs/  windows:E://qrcodeimgs/
qrcodeimgs=/usr/java/img/qrcodeimgs/
#映射的Nginx虚拟路径 windows:http://127.0.0.1/res linux:http://xiaosong6.idverify.cn/res/
imgPath=http://xiaosong6.idverify.cn/res/
imageSaveDir=/usr/java/qrcode/image



















server.port=8084

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://rm-bp1v30gvxn3h81ytx.mysql.rds.aliyuncs.com:3306/visitor?usSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
#spring.datasource.username=xiaosong
#spring.datasource.password=Xsafe!@1v$Lq

spring.datasource.url=jdbc:mysql://localhost:3306/vistor?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=1800
spring.datasource.logAbandoned=true

spring.datasource.initialSize=5
spring.datasource.minIdle=20
spring.datasource.maxActive=50
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis= 300000
spring.datasource.validationQuery= SELECT 1 FROM DUAL
spring.datasource.testWhileIdle= true
spring.datasource.testOnBorrow= false
spring.datasource.testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.tomcat.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true
#debug=true


#logging.level.com.manage=warn
logging.config=classpath:config/logback-spring.xml
#logging.level.org.springframework=WARN
#logging.level.org.spring.springboot.dao=DEBUG
#logging.file=D:/log/spring-boot-logging.log
#logging.file=/2017_8_5_3/manage-agent/logs/agent-spring-boot-logging.log

#spring.aop.auto=true

#mybatis start
mybatis.config-locations=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:/com/manage/mapping/*.xml
mybatis.type-aliases-package=com.manage.model
mybatis.configuration.mapUnderscoreToCamelCase=false
mybatis.configuration.map-underscore-to-camel-case=false
#mybatis end

#mapper
#mappers 多个接口时逗号隔开#tk.mybatis.springboot.util.MyMapper
mapper.mappers=com.manage.utils.mapper.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#kaptcha.properties
kaptcha.border=no
kaptcha.border.color=105,179,90
#kaptcha.textproducer.font.color=white
kaptcha.textproducer.font.color=black
kaptcha.image.width=125
kaptcha.image.height=45
kaptcha.session.key=code
kaptcha.textproducer.char.length=4
kaptcha.textproducer.font.names=宋体,楷体,微软雅黑
kaptcha.noise.impl=com.google.code.kaptcha.impl.NoNoise
kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.FishEyeGimpy
kaptcha.noise.color=255,255,255
kaptcha.background.impl=com.google.code.kaptcha.impl.DefaultBackground
#kaptcha.background.clear.from=black
#kaptcha.background.clear.to=black
kaptcha.background.clear.from=white
kaptcha.background.clear.to=white
#网页版认证+审核地址
sendParams=http://c2ym6d.natappfree.cc
#二维码存储地址    linux=qrcodeimgs=/usr/java/img/qrcodeimgs/  windows:E://qrcodeimgs/
qrcodeimgs=E://qrcodeimgs/
#映射的Nginx虚拟路径
imgPath=http://127.0.0.1:801/res/
imageSaveDir=/usr/java/qrcode/image
#sendParams=http://t.pyblkj.cn:8081/
##二维码存储地址    linux=qrcodeimgs=/usr/java/img/qrcodeimgs/  windows:E://qrcodeimgs/
#qrcodeimgs=/usr/java/img/qrcodeimgs/
##映射的Nginx虚拟路径 windows:http://127.0.0.1/res linux:http://xiaosong6.idverify.cn/res/
#imgPath=http://xiaosong6.idverify.cn/res/
